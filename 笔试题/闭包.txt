闭包是什么？

出现的原因：
由于js的垃圾回收机制，局部变量无法共享和长久的保存，而全局变量可能会造成变量污染，但我们希望
有一种机制既可以长久的保存变量又不会造成全局污染

标记清除
引用计数： 主要核心思路就是记录值被引用的次数, 
一个值被赋给变量,引用次数+1, 
这个变量在某个时刻重新赋了一个新值, 
旧值的引用次数-1变为了0, 在下次垃圾回收程序进行时就会释放它的内存

标记清除是现在最常使用的垃圾回收策略, 
使用标记清除作为垃圾回收机制的浏览器会在垃圾回收程序进行时会做如下几步 : 

标记内存中所有的变量
把在上下文(全局作用域, 脚本作用域)中声明的变量,以及在全局被引用的变量的标记删除掉,
剩下的所有带标记的变量就被视为要删除的变量, 垃圾回收执行时释放它们占用的内存
内存清理, 清除垃圾

闭包特性：返回的是一个函数，并且这个函数对局部变量存在引用，这就形成闭包关系